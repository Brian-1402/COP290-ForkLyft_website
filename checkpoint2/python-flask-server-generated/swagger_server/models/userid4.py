# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Userid4(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: int=None, order_date: date=None, restaurant_id: int=None, food_items: List=None, amount: int=None):  # noqa: E501
        """Userid4 - a model defined in Swagger

        :param customer_id: The customer_id of this Userid4.  # noqa: E501
        :type customer_id: int
        :param order_date: The order_date of this Userid4.  # noqa: E501
        :type order_date: date
        :param restaurant_id: The restaurant_id of this Userid4.  # noqa: E501
        :type restaurant_id: int
        :param food_items: The food_items of this Userid4.  # noqa: E501
        :type food_items: List
        :param amount: The amount of this Userid4.  # noqa: E501
        :type amount: int
        """
        self.swagger_types = {
            'customer_id': int,
            'order_date': date,
            'restaurant_id': int,
            'food_items': List,
            'amount': int
        }

        self.attribute_map = {
            'customer_id': 'customer_id',
            'order_date': 'order_date',
            'restaurant_id': 'restaurant_id',
            'food_items': 'food_items',
            'amount': 'amount'
        }
        self._customer_id = customer_id
        self._order_date = order_date
        self._restaurant_id = restaurant_id
        self._food_items = food_items
        self._amount = amount

    @classmethod
    def from_dict(cls, dikt) -> 'Userid4':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The userid_4 of this Userid4.  # noqa: E501
        :rtype: Userid4
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> int:
        """Gets the customer_id of this Userid4.


        :return: The customer_id of this Userid4.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: int):
        """Sets the customer_id of this Userid4.


        :param customer_id: The customer_id of this Userid4.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def order_date(self) -> date:
        """Gets the order_date of this Userid4.


        :return: The order_date of this Userid4.
        :rtype: date
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date: date):
        """Sets the order_date of this Userid4.


        :param order_date: The order_date of this Userid4.
        :type order_date: date
        """

        self._order_date = order_date

    @property
    def restaurant_id(self) -> int:
        """Gets the restaurant_id of this Userid4.


        :return: The restaurant_id of this Userid4.
        :rtype: int
        """
        return self._restaurant_id

    @restaurant_id.setter
    def restaurant_id(self, restaurant_id: int):
        """Sets the restaurant_id of this Userid4.


        :param restaurant_id: The restaurant_id of this Userid4.
        :type restaurant_id: int
        """

        self._restaurant_id = restaurant_id

    @property
    def food_items(self) -> List:
        """Gets the food_items of this Userid4.


        :return: The food_items of this Userid4.
        :rtype: List
        """
        return self._food_items

    @food_items.setter
    def food_items(self, food_items: List):
        """Sets the food_items of this Userid4.


        :param food_items: The food_items of this Userid4.
        :type food_items: List
        """

        self._food_items = food_items

    @property
    def amount(self) -> int:
        """Gets the amount of this Userid4.


        :return: The amount of this Userid4.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount: int):
        """Sets the amount of this Userid4.


        :param amount: The amount of this Userid4.
        :type amount: int
        """

        self._amount = amount
